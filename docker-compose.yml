version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: crud-app-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: crud_app
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - crud-network

  # Backend API Server
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crud-app-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/crud_app?authSource=admin
      SESSION_SECRET: your-super-secret-session-key-change-this
      JWT_SECRET: your-super-secret-jwt-key-change-this
    ports:
      - "5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    networks:
      - crud-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/auth/me', (res) => { process.exit(res.statusCode === 401 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Development Server
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.client
    container_name: crud-app-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      CHOKIDAR_USEPOLLING: true
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - crud-network
    stdin_open: true
    tty: true

  # Production Frontend (Alternative - serves built React app)
  frontend-prod:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: crud-app-frontend-prod
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - crud-network
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local

networks:
  crud-network:
    driver: bridge 